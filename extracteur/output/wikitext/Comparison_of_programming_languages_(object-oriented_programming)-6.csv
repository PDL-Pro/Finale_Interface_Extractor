  ; read-write ; read-only ; write-only 
 ABAP Objects ; colspan=3 n/a 
 C++ (STL) ; colspan=3 n/a 
 C# ; type Bar {  get, set, } ; type Bar {  get, private set, } ; type Bar {  private get, set, } 
 D ; colspan=3 n/a 
 Java ; colspan=3 n/a 
 Objective-C 2.0 (Cocoa) ; @property (readwrite) type bar,  and then inside @implementation  @synthesize bar, ; @property (readonly) type bar,  and then inside @implementation  @synthesize bar, ; n/a 
 Swift ; var bar : type ; let bar : type ; n/a 
 Eiffel ;  ; ; 
 Python ; @propertydef bar(self):Tabinstructions@bar.setterdef bar(self, value):Tabinstructions ; @propertydef bar(self):Tabinstructions ; bar = property()@bar.setterdef bar(self, value):Tabinstructions 
 Visual Basic .NET ; Property Bar As type« = initial_value» (VB 10) ;  ;  
 PHP ;  ;  ;  
 Perlthese examples need the Class::Accessor module installed ; use base qw(Class::Accessor),__PACKAGE__->mk_accessors('Bar'), ; use base qw(Class::Accessor),__PACKAGE__->mk_ro_accessors('Bar'), ; use base qw(Class::Accessor),__PACKAGE__->mk_wo_accessors('Bar'), 
 Raku ; colspan=3 n/a 
 Ruby ; attr_accessor :bar ; attr_reader :bar ; attr_writer :bar 
 Windows PowerShell ;  ;  ;  
 OCaml ; colspan=3 n/a 
 F# ; member val Bar = value with get, set ;  ;  
 COBOL ; level-number bar clauses PROPERTY. ; level-number bar clauses PROPERTY «WITH» NO SET. ; level-number bar clauses PROPERTY «WITH» NO GET. 
 Cobra ; pro bar from var «as type» ; get bar from var «as type» ; set bar from var «as type» 
