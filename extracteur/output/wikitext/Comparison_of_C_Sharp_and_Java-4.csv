 Java ; C# 
 Arrays are implicitly direct specializations of Object. They are not unified with collection types. ; Arrays in C# are implicit specializations of the System.Array class that implements several collection interfaces. 
 Arrays and collections are completely separate with no unification. Arrays cannot be passed where sequences or collections are expected (though they can be wrapped using Arrays.asList). ; Arrays can be passed where sequences (IEnumerables) or collections/list interfaces are expected. However, the collection operations that alter the number of elements (insert/add/remove) will throw exceptions as these operations are unsupported by arrays. 
 The for statement accepts either arrays or Iterables. All collections implement Iterable. This means that the same short syntax can be used in for-loops. ; The foreach statement iterates through a sequence using a specific implementation of the GetEnumerator method, usually implemented through the IEnumerable or IEnumerable interface. Because arrays always implicitly implement these interfaces, the loop will iterate through arrays also. 
In both languages arrays of reference types are covariant. This means that a String[] array is assignable to variables of Object[], as String is a specialization of (assignable to) Object. In both languages, the arrays will perform a type check when inserting new values, because type safety would otherwise be compromised. This is in contrast to how generic collections have been implemented in both languages. ;In both languages arrays of reference types are covariant. This means that a String[] array is assignable to variables of Object[], as String is a specialization of (assignable to) Object. In both languages, the arrays will perform a type check when inserting new values, because type safety would otherwise be compromised. This is in contrast to how generic collections have been implemented in both languages. 
 No multidimensional arrays (rectangular arrays), but arrays of references to arrays (jagged array). ; Multidimensional arrays (rectangular arrays), and arrays of references to arrays (jagged array). 
 Arrays cannot be resized (though use of the System.arraycopy() method can allow for multi-step array resizing) ; Arrays can be resized while preserving existing values using the Array.Resize() static array method (but this may return a new array). 
 Implemented as a retrofit for the java.util library having extra features, like data structures like sets and linked sets, and has several algorithms to manipulate elements of a collection, like finding the largest element based on some Comparator object, finding the smallest element, finding sublists within a list, reverse the contents of a list, shuffle the contents of a list, create immutable versions of a collection, performs sorts, and make binary searches. ; The C# collections framework consists of classes from the System.Collections and the System.Collections.Generic namespaces with several useful interfaces, abstract classes, and data structures.{{cite web ;url=  ;title=A Comparison of Microsoft's C# Programming Language to Sun Microsystems' Java Programming Language: C. An Ever So Slight Feeling of Dèjà Vu: 6. Collections  ;author=Dare Obasanjo  ;publisher=Dare Obasanjo  ;archiveurl=  ;archivedate=2 January 2013  ;date=March 2007  ;quote=The C# collections framework consists of the classes in the System. Collections and the System.Collections.Generic namespaces. The Systems.Collections namespace contains interfaces and abstract classes that represent abstract data types such as IList, IEnumerable, IDictionary, ICollection, and CollectionBase that enable developers to manipulate data structures independently of how they are actually implemented as long as the data structures inherit from the abstract data types. The System.Collections namespace also contains some concrete implementations of data structures such as ArrayList, Stack, Queue, HashTable and SortedList. All four of the concrete data structure implementations enable one to obtain synchronized wrappers to the collection that allows for access in a thread-safe manner. The System.Collections.Generic namespace has generic implementations of the key data structures in the System.Collections namespace including generic List, Stack,Queue, Dictionary<K,T> and SortedDictionary<K,T> classes.  ;accessdate=10 September 2012  ;url-status=dead  }} NET 3.5 added System.Linq namespace that contains various extension methods for querying collections, such as Aggregate, All, Average, Distinct, Join, Union and many others. Queries using these methods are called Language Integrated Query (LINQ). 
